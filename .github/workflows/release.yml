name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "MLServer Version to Release"
        required: true

env:
  DOCKER_DOMAIN: europe-west2-docker.pkg.dev
  DOCKER_REGISTRY: europe-west2-docker.pkg.dev/dev-seldon-registry/mlserver
  MLSERVER_IMAGE: europe-west2-docker.pkg.dev/dev-seldon-registry/mlserver/mlserver:${{ github.event.inputs.version }}
  PYPI_REGISTRY: https://europe-west2-python.pkg.dev/dev-seldon-registry/pypi/

jobs:
  draft-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Update Version
        run: |
          ./hack/update-version.sh ${{ github.event.inputs.version }}
      - name: Commiting & Pushing Updated Version Tag
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Bump version to ${{ github.event.inputs.version }}
          tagging_message: ${{ github.event.inputs.version }}
      - name: Draft Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: true
          tag_name: ${{ github.event.inputs.version }}
  mlserver:
    needs: draft-release
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-android: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
          root-reserve-mb: 30720
          swap-size-mb: 1024
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.version }}
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: false
      - name: Configure Poetry
        run: |
          poetry config repositories.seldon-pypi $PYPI_REGISTRY
          poetry self add keyring keyrings.google-artifactregistry-auth
      - name: Build Python wheel
        run: |
          poetry build
          poetry publish --skip-existing -r seldon-pypi
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}
      - name: Build Docker Image
        run: |
          DOCKER_BUILDKIT=1 docker build . \
            --build-arg RUNTIMES="" \
            -t $MLSERVER_IMAGE-slim
          DOCKER_BUILDKIT=1 docker build . \
            --build-arg RUNTIMES=all \
            -t $MLSERVER_IMAGE
      - name: Scan Docker Image
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: $DOCKER_REGISTRY/mlserver:${{ github.event.inputs.version }}
          args: --fail-on=upgradable
            --app-vulns
            --severity-threshold=high
            --file=Dockerfile
            --policy-path=.snyk
      - name: Scan Docker Slim Image
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: $DOCKER_REGISTRY/mlserver:${{ github.event.inputs.version }}-slim
          args: --fail-on=upgradable
            --app-vulns
            --severity-threshold=high
            --file=Dockerfile
            --policy-path=.snyk
      - name: Configure Docker
        run: |
          gcloud auth configure-docker $DOCKER_DOMAIN -q
      - name: Push to GCP
        run: |
          docker push $MLSERVER_IMAGE-slim
          docker push $MLSERVER_IMAGE

  runtimes:
    needs: draft-release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        runtime:
          - alibi-detect
          - alibi-explain
          - huggingface
          - lightgbm
          - mlflow
          - mllib
          - sklearn
          - xgboost
    env:
      RUNTIME_IMAGE: europe-west2-docker.pkg.dev/dev-seldon-registry/mlserver/mlserver:${{ github.event.inputs.version }}-${{ matrix.runtime }}
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-android: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
          root-reserve-mb: 30720
          swap-size-mb: 1024
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.version }}
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: false
      - name: Configure Poetry
        run: |
          poetry config repositories.seldon-pypi $PYPI_REGISTRY
          poetry self add keyring keyrings.google-artifactregistry-auth
      - name: Build Python wheel
        working-directory: ./runtimes/${{ matrix.runtime }}
        run: |
          echo $GOOGLE_APPLICATION_CREDENTIALS}
          cat $GOOGLE_APPLICATION_CREDENTIALS
          poetry build
          poetry publish --skip-existing -r seldon-pypi
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}
      - name: Build Docker Image
        run: |
          DOCKER_BUILDKIT=1 docker build . \
            --build-arg RUNTIMES=mlserver-${{ matrix.runtime }} \
            -t $RUNTIME_IMAGE
      - name: Scan Docker Image
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: $DOCKER_REGISTRY/mlserver:${{ github.event.inputs.version }}-${{ matrix.runtime }}
          args: --fail-on=upgradable
            --app-vulns
            --severity-threshold=high --file=Dockerfile
            --policy-path=.snyk
      - name: Configure Docker
        run: |
          gcloud auth configure-docker $DOCKER_DOMAIN -q
      - name: Push to GCP
        run: |
          docker push $RUNTIME_IMAGE
