name: MLServer Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "MLServer Version to Release"
        required: true
jobs:
  draft-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Update Version
        run: |
          ./hack/update-version.sh ${{ github.event.inputs.version }}
      - name: Commiting & Pushing Updated Version Tag
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Bump version to ${{ github.event.inputs.version }}
          tagging_message: ${{ github.event.inputs.version }}
      - name: Draft Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: true
          tag_name: ${{ github.event.inputs.version }}

  mlserver:
    needs: draft-release
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: "true"
          remove-haskell: "true"
          remove-android: "true"
          root-reserve-mb: "14336"
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.version }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install -r ./requirements/dev.txt
      - name: Build Python wheel
        run: |
          python setup.py \
            sdist -d ./dist \
            bdist_wheel -d ./dist
          # twine upload dist/*
        env:
          TWINE_NON_INTERACTIVE: 1
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image
        run: |
          DOCKER_BUILDKIT=1 docker build . \
            --build-arg RUNTIMES="" \
            -t $MLSERVER_IMAGE-slim
          docker push $MLSERVER_IMAGE-slim
          DOCKER_BUILDKIT=1 docker build . \
            --build-arg RUNTIMES=all \
            -t $MLSERVER_IMAGE
          # docker push $MLSERVER_IMAGE
        env:
          MLSERVER_IMAGE: seldonio/mlserver:${{ github.event.inputs.version }}

  runtimes:
    needs: draft-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime:
          - alibi-detect
          - alibi-explain
          - huggingface
          - lightgbm
          - mlflow
          - mllib
          - sklearn
          - xgboost
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: "true"
          remove-haskell: "true"
          remove-android: "true"
          root-reserve-mb: "10240"
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.version }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install -r ./requirements/dev.txt
      - name: Build Python wheel
        working-directory: ./runtimes/${{ matrix.runtime }}
        run: |
          python setup.py \
            sdist -d ./dist \
            bdist_wheel -d ./dist
          # twine upload ./dist/*
        env:
          TWINE_NON_INTERACTIVE: 1
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image
        run: |
          DOCKER_BUILDKIT=1 docker build . \
            --build-arg RUNTIMES=mlserver-${{ matrix.runtime }} \
            -t $RUNTIME_IMAGE
          # docker push $RUNTIME_IMAGE
        env:
          RUNTIME_IMAGE: seldonio/mlserver:${{ github.event.inputs.version }}-${{ matrix.runtime }}
