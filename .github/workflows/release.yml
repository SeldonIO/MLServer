name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "MLServer Version to Release"
        required: true
jobs:
  draft-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update Version
        run: |
          ./hack/update-version.sh ${{ github.event.inputs.version }}
      - name: Commiting & Pushing Updated Version Tag
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Bump version to ${{ github.event.inputs.version }}
          tagging_message: ${{ github.event.inputs.version }}
      - name: Draft Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: true
          tag_name: ${{ github.event.inputs.version }}

  mlserver:
    needs: draft-release
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: "true"
          remove-haskell: "true"
          remove-android: "true"
          root-reserve-mb: "40960"
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.version }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install -r ./requirements/dev.txt
      - name: Build Python wheel
        run: |
          python setup.py \
            sdist -d ./dist \
            bdist_wheel -d ./dist
          twine upload --skip-existing dist/*
        env:
          TWINE_NON_INTERACTIVE: 1
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      - name: Build Docker Image
        run: |
          DOCKER_BUILDKIT=1 docker build . \
            --build-arg RUNTIMES="" \
            -t $MLSERVER_IMAGE-slim
          DOCKER_BUILDKIT=1 docker build . \
            --build-arg RUNTIMES=all \
            -t $MLSERVER_IMAGE
        env:
          MLSERVER_IMAGE: seldonio/mlserver:${{ github.event.inputs.version }}
      - name: Scan Docker Image
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: seldonio/mlserver:${{ github.event.inputs.version }}
          args: --fail-on=upgradable --app-vulns --severity-threshold=high --file=Dockerfile
      - name: Scan Docker Slim Image
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: seldonio/mlserver:${{ github.event.inputs.version }}-slim
          args: --fail-on=upgradable --app-vulns --severity-threshold=high --file=Dockerfile
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        run: |
          docker push $MLSERVER_IMAGE-slim
          docker push $MLSERVER_IMAGE
        env:
          MLSERVER_IMAGE: seldonio/mlserver:${{ github.event.inputs.version }}
      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Push to Quay.io
        run: |
          docker tag $MLSERVER_IMAGE-slim $QUAY_MLSERVER_IMAGE-slim
          docker push $QUAY_MLSERVER_IMAGE-slim
          docker tag $MLSERVER_IMAGE $QUAY_MLSERVER_IMAGE
          docker push $QUAY_MLSERVER_IMAGE
        env:
          MLSERVER_IMAGE: seldonio/mlserver:${{ github.event.inputs.version }}
          QUAY_MLSERVER_IMAGE: quay.io/redhat-isv-containers/63566bb9822ce8cef9ba27fc:${{ github.event.inputs.version }}
      - name: Install preflight
        run: |
          wget https://github.com/redhat-openshift-ecosystem/openshift-preflight/releases/download/$PREFLIGHT_VERSION/preflight-linux-amd64
          chmod u+x preflight-linux-amd64
          sudo mv preflight-linux-amd64 /usr/local/bin/preflight
          preflight --version
        env:
          PREFLIGHT_VERSION: 1.4.2
      - name: Submit preflight results
        run: |
          preflight check container \
            $QUAY_MLSERVER_IMAGE-slim \
            --docker-config=${HOME}/.docker/config.json \
            --certification-project-id=$PROJECT_ID \
            --pyxis-api-token=$PYXIS_API_TOKEN \
            --artifacts ./artifacts/mlserver \
            --submit
          preflight check container \
            $QUAY_MLSERVER_IMAGE \
            --docker-config=${HOME}/.docker/config.json \
            --certification-project-id=$PROJECT_ID \
            --pyxis-api-token=$PYXIS_API_TOKEN \
            --artifacts ./artifacts/mlserver-slim \
            --submit
        env:
          PYXIS_API_TOKEN: ${{ secrets.PYXIS_API_TOKEN }}
          PROJECT_ID: 63566bb9822ce8cef9ba27fc
          QUAY_MLSERVER_IMAGE: quay.io/redhat-isv-containers/63566bb9822ce8cef9ba27fc:${{ github.event.inputs.version }}

  runtimes:
    needs: draft-release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        runtime:
          - alibi-detect
          - alibi-explain
          - huggingface
          - lightgbm
          - mlflow
          - mllib
          - sklearn
          - xgboost
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.version }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install -r ./requirements/dev.txt
      - name: Build Python wheel
        working-directory: ./runtimes/${{ matrix.runtime }}
        run: |
          python setup.py \
            sdist -d ./dist \
            bdist_wheel -d ./dist
          twine upload --skip-existing ./dist/*
        env:
          TWINE_NON_INTERACTIVE: 1
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      - name: Build Docker Image
        run: |
          DOCKER_BUILDKIT=1 docker build . \
            --build-arg RUNTIMES=mlserver-${{ matrix.runtime }} \
            -t $RUNTIME_IMAGE
        env:
          RUNTIME_IMAGE: seldonio/mlserver:${{ github.event.inputs.version }}-${{ matrix.runtime }}
      - name: Scan Docker Image
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: seldonio/mlserver:${{ github.event.inputs.version }}-${{ matrix.runtime }}
          args: --fail-on=upgradable --app-vulns --severity-threshold=high --file=Dockerfile
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        run: |
          docker push $RUNTIME_IMAGE
        env:
          RUNTIME_IMAGE: seldonio/mlserver:${{ github.event.inputs.version }}-${{ matrix.runtime }}
      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Push to Quay.io
        run: |
          docker tag $RUNTIME_IMAGE $QUAY_RUNTIME_IMAGE
          docker push $QUAY_RUNTIME_IMAGE
        env:
          RUNTIME_IMAGE: seldonio/mlserver:${{ github.event.inputs.version }}-${{ matrix.runtime }}
          QUAY_RUNTIME_IMAGE: quay.io/redhat-isv-containers/63566bb9822ce8cef9ba27fc:${{ github.event.inputs.version }}-${{ matrix.runtime }}
      - name: Install preflight
        run: |
          wget https://github.com/redhat-openshift-ecosystem/openshift-preflight/releases/download/$PREFLIGHT_VERSION/preflight-linux-amd64
          chmod u+x preflight-linux-amd64
          sudo mv preflight-linux-amd64 /usr/local/bin/preflight
          preflight --version
        env:
          PREFLIGHT_VERSION: 1.4.2
      - name: Submit preflight results
        run: |
          preflight check container \
            $QUAY_RUNTIME_IMAGE \
            --docker-config=${HOME}/.docker/config.json \
            --certification-project-id=$PROJECT_ID \
            --pyxis-api-token=$PYXIS_API_TOKEN \
            --artifacts ./artifacts/mlserver-${{ matrix.runtime }} \
            --submit
        env:
          PYXIS_API_TOKEN: ${{ secrets.PYXIS_API_TOKEN }}
          PROJECT_ID: 63566bb9822ce8cef9ba27fc
          QUAY_RUNTIME_IMAGE: quay.io/redhat-isv-containers/63566bb9822ce8cef9ba27fc:${{ github.event.inputs.version }}-${{ matrix.runtime }}
