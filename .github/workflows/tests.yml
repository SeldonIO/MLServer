name: Tests

on:
  push:
    branches:
      - master
      - release/*
  pull_request:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          make install-dev
      - name: Lint
        run: |
          make lint

  mlserver:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup docker (missing on MacOS)
        if: runner.os == 'macos'
        run: |
          # From https://github.com/actions/runner-images/issues/17#issuecomment-1537238473
          # From https://github.com/abiosoft/colima/discussions/273#discussioncomment-4959736
          brew install docker docker-buildx
          mkdir -p $HOME/.docker/cli-plugins
          ln -sfn $(which docker-buildx) $HOME/.docker/cli-plugins/docker-buildx
          colima start --memory 4
          sudo ln -sf $HOME/.colima/default/docker.sock /var/run/docker.sock
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: false
      - name: Install dependencies
        run: |
          pip install -r requirements/dev.txt
      - name: Test
        run: |
          tox -e mlserver

  check-runtimes:
    outputs:
      runtimes: ${{ steps.generate-matrix.changes.runtimes }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Check Runtime Changes
        id: changes
        run: |
          _runtimes=""
          for _runtime in $(ls ./runtimes); do
            if [[ '${{ github.event_name }}' == 'pull_request' ]]; then
              # If change was on a PR branch, only run tests on modified runtimes
              echo "here we'll select runtimes based on diff"
            fi 
            
            # Append to _runtimes list
            if [ -z "$_runtimes" ]; then
              $_runtimes="\"$_runtime\""
            else
              $_runtimes="$_runtimes,\"$_runtime\""
            fi
          done
          echo "runtimes=[$_runtimes]" >> "$GITHUB_OUTPUT"
          cat $GITHUB_OUTPUT

  runtimes:
    needs: check-runtimes
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10"]
        tox-environment: ${{ fromJson(needs.check-runtimes.outputs.runtimes) }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: false
      - name: Install dependencies
        run: |
          pip install -r requirements/dev.txt
      - name: Test
        run: |
          tox -e ${{ matrix.tox-environment }}

  all-runtimes:
    if: github.event_name == 'push'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup docker (missing on MacOS)
        if: runner.os == 'macos'
        run: |
          # From https://github.com/actions/runner-images/issues/17#issuecomment-1537238473
          # From https://github.com/abiosoft/colima/discussions/273#discussioncomment-4959736
          brew install docker docker-buildx
          mkdir -p $HOME/.docker/cli-plugins
          ln -sfn $(which docker-buildx) $HOME/.docker/cli-plugins/docker-buildx
          colima start --memory 4
          sudo ln -sf $HOME/.colima/default/docker.sock /var/run/docker.sock
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: false
      - name: Install dependencies
        run: |
          pip install -r requirements/dev.txt
      - name: Test
        run: |
          tox -e all-runtimes
