[flake8]
max-line-length = 88
extend-ignore =
  # See https://github.com/PyCQA/pycodestyle/issues/373
  E203,
exclude =
  # Generated gRPC code
  ./mlserver/grpc/dataplane_pb2*
  ./mlserver/grpc/model_repository_pb2*
  ./mlserver.egg-info
  ./.tox
  ./venv

[mypy]
ignore_missing_imports = True
plugins = pydantic.mypy

[tool:pytest]
asyncio_mode = auto
addopts = "--import-mode=importlib"

[tox:tox]
basepython = py3
envlist =
    mlserver 
    sklearn
    xgboost
    lightgbm
    mlflow
    huggingface
    alibi-explain
    alibi-detect
    all-runtimes

[testenv:mlserver]
deps = 
  -e{toxinidir}
  -r{toxinidir}/requirements/dev.txt
commands =
  # Upgrade setuptools, pip and wheel to ensure we mimic the Docker image's
  # environment
  pip install --upgrade setuptools pip wheel
  python -m pytest {posargs} {toxinidir}/tests

[testenv:sklearn]
deps =
  -e{toxinidir}
  -e{toxinidir}/runtimes/sklearn
  -r{toxinidir}/requirements/dev.txt
commands =
  pip install --upgrade setuptools pip wheel
  python -m pytest {posargs} {toxinidir}/runtimes/sklearn

[testenv:xgboost]
deps =
  -e{toxinidir}
  -e{toxinidir}/runtimes/xgboost
  -r{toxinidir}/requirements/dev.txt
commands =
  pip install --upgrade setuptools pip wheel
  python -m pytest {posargs} {toxinidir}/runtimes/xgboost

[testenv:lightgbm]
deps =
  -e{toxinidir}
  -e{toxinidir}/runtimes/lightgbm
  -r{toxinidir}/requirements/dev.txt
commands =
  pip install --upgrade setuptools pip wheel
  python -m pytest {posargs} {toxinidir}/runtimes/lightgbm

[testenv:mlflow]
deps =
  -e{toxinidir}
  -e{toxinidir}/runtimes/mlflow
  -r{toxinidir}/requirements/dev.txt
  -r{toxinidir}/runtimes/mlflow/requirements/dev.txt
commands =
  pip install --upgrade setuptools pip wheel
  python -m pytest {posargs} {toxinidir}/runtimes/mlflow

[testenv:huggingface]
deps =
  -e{toxinidir}/runtimes/huggingface
  -r{toxinidir}/requirements/dev.txt
commands =
  # Avoid conflicts and ensure `protobuf==3.20.3` is used (CVE-2022-1941)
  # https://github.com/huggingface/optimum/issues/733
  pip install -e{toxinidir}
  pip install --upgrade setuptools pip wheel
  python -m pytest {posargs} {toxinidir}/runtimes/huggingface

[testenv:alibi-explain]
deps =
  -e{toxinidir}/runtimes/alibi-explain
  -e{toxinidir}
  -r{toxinidir}/requirements/dev.txt
  -r{toxinidir}/runtimes/alibi-explain/requirements/dev.txt
setenv =
  CUDA_VISIBLE_DEVICES =
commands =
  pip install --upgrade setuptools pip wheel
  python -m pytest {posargs} {toxinidir}/runtimes/alibi-explain

[testenv:alibi-detect]
deps =
  -e{toxinidir}/runtimes/alibi-detect
  -r{toxinidir}/requirements/dev.txt
setenv =
  CUDA_VISIBLE_DEVICES =
commands =
  # Avoid conflicts and ensure `protobuf==3.20.3` is used (CVE-2022-1941)
  pip install -e{toxinidir}
  pip install --upgrade setuptools pip wheel
  python -m pytest {posargs} {toxinidir}/runtimes/alibi-detect

[testenv:all-runtimes]
deps =
  -e{toxinidir}/runtimes/alibi-explain
  -e{toxinidir}/runtimes/alibi-detect
  -e{toxinidir}/runtimes/sklearn
  -e{toxinidir}/runtimes/xgboost
  -e{toxinidir}/runtimes/mllib
  -e{toxinidir}/runtimes/lightgbm
  -e{toxinidir}/runtimes/mlflow
  -e{toxinidir}/runtimes/huggingface
  -r{toxinidir}/requirements/dev.txt
commands = 
  # Move other dev deps here - otherwise pip may choke trying to resolve deps
  pip install \
    -r{toxinidir}/runtimes/mlflow/requirements/dev.txt \
    -r{toxinidir}/runtimes/alibi-explain/requirements/dev.txt \
    -r{toxinidir}/runtimes/alibi-detect/requirements/dev.txt
  pip install \
    # Avoid conflicts with TF to ensure `protobuf==3.20.3` is used
    # (CVE-2022-1941)
    -e{toxinidir}
  python -m pytest {posargs} \
    {toxinidir}/tests \
    {toxinidir}/runtimes/alibi-explain \
    {toxinidir}/runtimes/alibi-detect \
    {toxinidir}/runtimes/sklearn \
    {toxinidir}/runtimes/xgboost \
    {toxinidir}/runtimes/mllib \
    {toxinidir}/runtimes/lightgbm \
    {toxinidir}/runtimes/mlflow \
    {toxinidir}/runtimes/huggingface

[testenv:licenses]
deps =
  -e{toxinidir}
  -e{toxinidir}/runtimes/alibi-explain
  -e{toxinidir}/runtimes/alibi-detect
  -e{toxinidir}/runtimes/sklearn
  -e{toxinidir}/runtimes/xgboost
  -e{toxinidir}/runtimes/mllib
  -e{toxinidir}/runtimes/lightgbm
  -e{toxinidir}/runtimes/mlflow
  -e{toxinidir}/runtimes/huggingface
  -r{toxinidir}/requirements/dev.txt
  -r{toxinidir}/runtimes/mlflow/requirements/dev.txt
commands =
  pip-licenses \
    --from=mixed \
    --format=csv \
    --output-file=./licenses/license_info.csv
  pip-licenses \
    --from=mixed \
    --format=plain-vertical \
    --with-license-file \
    --no-license-path \
    --output-file=./licenses/license.txt
