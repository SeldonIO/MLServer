[flake8]
max-line-length = 88
extend-ignore =
  # See https://github.com/PyCQA/pycodestyle/issues/373
  E203,
exclude =
  # Generated gRPC code
  ./mlserver/grpc/dataplane_pb2*
  ./mlserver/grpc/model_repository_pb2*
  ./mlserver.egg-info
  ./.tox

[mypy]
ignore_missing_imports = True
plugins = pydantic.mypy

[tool:pytest]
asyncio_mode = auto

[tox:tox]
basepython = py3
envlist =
    py3
    all
    sklearn
    xgboost
    lightgbm
    mlflow
    alibiexplain
    alibidetect
    all-runtimes

[testenv]
deps = -r{toxinidir}/requirements/dev.txt
commands = pytest {posargs} {toxinidir}/tests

[testenv:all]
deps =
  -e{toxinidir}[all]
  -r{toxinidir}/requirements/dev.txt
commands = pytest {posargs} {toxinidir}/tests

[testenv:sklearn]
deps =
  -e{toxinidir}
  -e{toxinidir}/runtimes/sklearn
  -r{toxinidir}/requirements/dev.txt
commands = pytest {posargs} {toxinidir}/runtimes/sklearn

[testenv:xgboost]
deps =
  -e{toxinidir}
  -e{toxinidir}/runtimes/xgboost
  -r{toxinidir}/requirements/dev.txt
commands = pytest {posargs} {toxinidir}/runtimes/xgboost

[testenv:lightgbm]
deps =
  -e{toxinidir}
  -e{toxinidir}/runtimes/lightgbm
  -r{toxinidir}/requirements/dev.txt
commands = pytest {posargs} {toxinidir}/runtimes/lightgbm

[testenv:mlflow]
deps =
  -e{toxinidir}
  -e{toxinidir}/runtimes/mlflow
  -r{toxinidir}/requirements/dev.txt
  -r{toxinidir}/runtimes/mlflow/requirements/dev.txt
commands = pytest {posargs} {toxinidir}/runtimes/mlflow

[testenv:huggingface]
deps =
  -e{toxinidir}
  -e{toxinidir}/runtimes/huggingface
  -r{toxinidir}/requirements/dev.txt
commands = pytest {posargs} {toxinidir}/runtimes/huggingface

[testenv:alibiexplain]
deps =
  -e{toxinidir}/runtimes/alibi-explain
  -e{toxinidir}
  -r{toxinidir}/requirements/dev.txt
  -r{toxinidir}/runtimes/alibi-explain/requirements/dev.txt
setenv =
  CUDA_VISIBLE_DEVICES =
commands = pytest {posargs} {toxinidir}/runtimes/alibi-explain

[testenv:alibidetect]
deps =
  -e{toxinidir}/runtimes/alibi-detect
  -e{toxinidir}
  -r{toxinidir}/requirements/dev.txt
setenv =
  CUDA_VISIBLE_DEVICES =
commands = pytest {posargs} {toxinidir}/runtimes/alibi-detect

[testenv:all-runtimes]
deps =
  -e{toxinidir}[all]
  # Removing from all-runtimes test, as they don't seem to fit in GH workers.
  # -e{toxinidir}/runtimes/alibi-explain
  # -e{toxinidir}/runtimes/alibi-detect
  -e{toxinidir}/runtimes/sklearn
  -e{toxinidir}/runtimes/xgboost
  -e{toxinidir}/runtimes/mllib
  -e{toxinidir}/runtimes/lightgbm
  -e{toxinidir}/runtimes/mlflow
  -r{toxinidir}/requirements/dev.txt
  -r{toxinidir}/runtimes/mlflow/requirements/dev.txt
  # -r{toxinidir}/runtimes/alibi-explain/requirements/dev.txt
commands = pytest {posargs} \
  {toxinidir}/tests \
  {toxinidir}/runtimes/sklearn \
  {toxinidir}/runtimes/xgboost \
  {toxinidir}/runtimes/mllib \
  {toxinidir}/runtimes/lightgbm \
  {toxinidir}/runtimes/mlflow

[testenv:licenses]
deps =
  -e{toxinidir}[all]
  -e{toxinidir}/runtimes/sklearn
  -e{toxinidir}/runtimes/xgboost
  -e{toxinidir}/runtimes/mllib
  -e{toxinidir}/runtimes/lightgbm
  -e{toxinidir}/runtimes/mlflow
  -e{toxinidir}/runtimes/alibi-explain
  -e{toxinidir}/runtimes/alibi-detect
  -r{toxinidir}/runtimes/mlflow/requirements/dev.txt
  -r{toxinidir}/runtimes/alibi-explain/requirements/dev.txt
  -r{toxinidir}/requirements/dev.txt
  -r{toxinidir}/requirements/docker.txt
commands =
  pip-licenses \
    --from=mixed \
    --format=csv \
    --output-file=./licenses/license_info.csv
  pip-licenses \
    --from=mixed \
    --format=plain-vertical \
    --with-license-file \
    --no-license-path \
    --output-file=./licenses/license.txt
