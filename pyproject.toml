[tool.poetry]
name = "mlserver"
version = "1.4.0.dev1"
description = "MLServer"
authors = ["Seldon Technologies Ltd. <hello@seldon.io>"]
license = "Apache 2.0"
readme = "README.md"
classifiers = [
    "Operating System :: POSIX",
    "Operating System :: MacOS"
]

[tool.poetry.scripts]
mlserver = 'mlserver.cli:main'

[tool.poetry.dependencies]
python = "^3.8.1,<3.12"
click = "^8.1.3"
fastapi = "^0.95"
python-dotenv = "^1.0.0"
grpcio = "^1.54.0"
numpy = "~1.23.0"
pandas = "^2.0.1"
protobuf = "^3.20.2"
uvicorn = "^0.22.0"
starlette-exporter = "^0.15.1"
py-grpc-prometheus = "^0.7.0"
aiokafka = "^0.8.0"
tritonclient = {version = "^2.24", extras = ["http"]}
aiofiles = "^23.1.0"
orjson = "^3.8.12"
uvloop = {version = "^0.17.0", markers = "sys_platform != 'win32' and (sys_platform != 'cygwin' and platform_python_implementation != 'PyPy')"}

## The importlib-resources backport is required to use some
## functionality added in Python 3.10
## https://setuptools.pypa.io/en/latest/userguide/datafiles.html#accessing-data-files-at-runtime
importlib-resources = "^5.12.0"

[tool.poetry.group.dev.dependencies]
datamodel-code-generator = "0.18.1"
grpcio-tools = "1.48.1"
tritonclient = {version = "2.32.0", extras = ["http"]}
pytest = "7.3.1"
pytest-asyncio = "0.21.0"
pytest-mock = "3.10.0"
pytest-cases = "3.6.14"
tox = "4.5.1"
docker = "6.0.1"
aiohttp = "3.8.4"
aiohttp-retry = "2.8.3"
## Used for FastAPI Async testing
httpx = "0.24.0"
kafka-python = "2.0.2"
tenacity = "8.2.2"
pyyaml = "6.0"

## Latest version of conda-pack (0.7.0) is not on PyPi
## See https://github.com/conda/conda-pack/issues/219
conda-pack = {git = "https://github.com/conda/conda-pack", rev = "0.7.0"}
flake8 = "6.0.0"
flake8-black = "0.3.6"
mypy = "1.2.0"
mypy-protobuf = "3.1.0"
types-protobuf = "4.22.0.2"
types-orjson = "3.6.2"
types-aiofiles = "23.1.0.1"
types-requests = "2.28.11.5"
black = "23.3.0"
pip-licenses = "4.3.0"

[tool.poetry.group.docker.dependencies]
protobuf = "3.20.3"
tensorflow = "~2.12.0"

[tool.poetry.group.all-runtimes]
optional = true

[tool.poetry.group.all-runtimes.dependencies]
mlserver-sklearn = {path = "./runtimes/sklearn", develop = true}
mlserver-xgboost = {path = "./runtimes/xgboost", develop = true}
mlserver-lightgbm = {path = "./runtimes/lightgbm", develop = true}
mlserver-mlflow = {path = "./runtimes/mlflow", develop = true}
mlserver-huggingface = {path = "./runtimes/huggingface", develop = true}
mlserver-alibi-explain = {path = "./runtimes/alibi-explain", develop = true}
mlserver-alibi-detect = {path = "./runtimes/alibi-detect", develop = true}

# tensorflow = "^2.12.0"
# pillow = "^9.5.0"
# optimum = {extras = ["onnxruntime"], version = "^1.8.5"}
## NOTE: Installing `main` until this PR makes it to `4.30.0`
## https://github.com/huggingface/transformers/pull/22759
# transformers = {git = "https://github.com/huggingface/transformers.git", branch = "main", rev = "0c65fb7cfa1258fb5946c5ae4d13f5a2a88a2f56"}

## Dev dependencies from Alibi-Explain
requests-mock = "~1.10.0"
types-requests = "~2.28.11.5"

## Dev dependencies from Alibi-Detect
tensorflow = "~2.12.0"

## Dev dependencies from MLflow
torch = "~2.0.1"
pytorch-lightning = "~2.0.2"
torchmetrics = "~0.11.4"
torchvision = "~0.15.2"
mlflow = "~2.3.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
